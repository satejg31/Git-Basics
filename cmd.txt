a] git init => initialize the directory

b] git status => get current status of the repository
Here we can also see all the files that are created in the repository and its
changes are not been registered so here we have created a temp.txt file and 
that particular changes are not mentioned so we get an warning after we fire the 
git status command.

c] git add temp.txt => Add the file to the repositry
Here we have added and then this is reflected when we again fire the command 
git status.

d] git commit -m "Description of commit"
Here we are commiting the repo to the git and here we also give the normal 
descriptive line for the same.

e] git restore --staged <file name> 
Here we unstage the added file to change it again add to repo

Fired the git restore --staged <file name>
After this we can again add the file to the repo and then commit it to the repo

f] git log => We will get the log file means the trace of all the changes that were 
made to this repo in the whole history. Basically the track of all the commits made
to the repo

If we deleted a file by mistake we can get it back by getting the hash code 
from the git log and then fire the git reset command and then nextly,
we have the deleted file back but its not reflecting.
when we fire the git status command we can see that it prompts you have deleted an xyz file 
you can restore it immediately but you can also keep it in stash means you can use the same 
when you want it back.

h] git stash 
This will send the changes made to the repo in the backgroubd it wont be reflected 
dont forget to add the files to the git repo 
git add .
git stash

i] git remote add origin "Your git URL"
Here we are adding attaching the git Repo with our github repository
remote => We are managing URLS
add => adding a URL
origin => Name to be recoginzed for the URL

j] git push remote origin 
Here we are pushing our whole repo to the github repo Git-Basics

k] git branch branch1
Here we created a new branch which means now a separate code maintenance 
is done over here to activate this branch we fire the git checkout branch1
Then we will be shifted to the new branch. And now add the commits will be made to the 
current branch that is active and thats are branch1
Basically this feature of git is for the better maintenance of the code 
Consider a situation we are working on a new functionality and that functionality is not 
proper and not that best that everyone could use the same so we create a new branch 
add our code to the branch and then when its functionality is acknowledged we can 
add this code to the main branch and here the main branch is called as "master"

l] Now if we want to merge the branch code we fire the 
git merge branch1

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

1] How can you access other persons code 
Go to that repo and fork it. when you fork it that particular repo will be avaiable 
in your github and then you can clone the same.

2] we can clone that repo and we access it in our machine.

git clone "URL"

Now you can access the same code 

3] Now the main reason we fork a git repo is to add, to change, to modify or to refer 
the repo. So now the repo we cloned is called as the upstream repo 
So we add a new remote name to the same by,

git remote add upstream "URL of the upstream Repo"

4] we can see all the remote repo name by firing the git remote -v command 

(base) satejg31@satejg31-Latitude-E5450:~/Git$ git remote -v
origin	https://github.com/satejg31/Git-Basics (fetch)
origin	https://github.com/satejg31/Git-Basics (push)
upstream	https://github.com/pinak0722/commclassrooomgit.git (fetch)
upstream	https://github.com/pinak0722/commclassrooomgit.git (push)


5] Now when we want to add some changes to the git repo
so firstly, we have cloned it locally ok 
nextly, after cloning we changed the files.
Its always recommended to create a new branch when we have done changes to the same.

git branch <branchName>
git checkout <branchName>

Now, if we want our changes to be reflected in the main branch then we do the same by 
making a pull request of the same.

